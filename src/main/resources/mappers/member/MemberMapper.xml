<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ProductMapper Xml -->
<mapper namespace="org.fktm.fastpickup.member.mappers.MemberMapper">

    <!-- 회원가입 -->
    <!-- selectKey는 기본적으로 int형이므로 ID(String) 을 뽑아오려면 아래와같이 작성한다. -->
    <insert id = "registMember" useGeneratedKeys="true" keyProperty="memberID" keyColumn="memberID">
        insert into tbl_member (memberID, memberPW, memberName, memberAddr, memberPhoneNum)
        values(#{memberID}, #{memberPW}, #{memberName}, #{memberAddr}, #{memberPhoneNum})
    </insert>

  <!-- 회원 상세보기 -->
    <resultMap id ="memberMap" type="org.fktm.fastpickup.member.dto.MemberReadDTO">
      <id property ="memberID" column ="memberID"/>
      <result property ="memberRole" column="memberRole"/>
      <result property ="memberPW" column="memberPW"/>
      <result property ="memberName" column="memberName"/>
      <result property ="memberAddr" column="memberAddr"/>
      <result property ="memberPhoneNum" column="memberPhoneNum"/>
      <result property ="joinDate" column="joinDate"/>
      <result property ="withDrawalStatus" column="withDrawalStatus"/>
      <collection property="memberRoles" resultMap="memberRolesNameMap"/>
    </resultMap>

    <resultMap type = "String" id ="memberRolesNameMap">
      <result column = "roleName"/>
    </resultMap>

    <select id ="readMember" resultMap ="memberMap">
      select tm.memberID, tmr.roleName, tm.memberPW ,tm.memberName, tm.memberAddr, tm.memberPhoneNum, tm.joinDate, tm.withDrawalStatus
      from tbl_member tm left outer join tbl_member_role tmr on tm.memberID = tmr.memberID
      where tm.memberID = #{memberID}
    </select>

  <!-- 회원 상세보기 -->

  <!-- 회원 리스트 검색 -->
    <select id = "getMemberList">
      select memberID, memberName, memberAddr, memberPhoneNum, joinDate, withDrawalStatus, withDrawalDate
      from tbl_member
      where joinDate > 0

         <if test="withDrawalStatus != null">
          and withDrawalStatus = #{withDrawalStatus}
        </if>

        <if test="keyword != null and types != null">
            <trim prefix="and (" prefixOverrides="or" suffix=")">
              <foreach collection="types" item="type" separator=" or ">
                <if test='type == "i"'>
                  memberID like concat('%', #{keyword}, '%')
                </if>
              </foreach>
            </trim>
        </if>
      
      order by joinDate desc
      limit #{skip}, #{size}
      
    </select>

    <!-- 현재 페이지에 대한 회원 수 -->
    <select id ="getTotalMember">
      select count(*)
      from (select memberID, memberName, memberAddr, memberPhoneNum, joinDate, withDrawalStatus
            from tbl_member
            where joinDate > 0

               <if test="withDrawalStatus != null">
                and withDrawalStatus = #{withDrawalStatus}
              </if>

              <if test="keyword != null and types != null">
                <trim prefix="and (" prefixOverrides="or" suffix=")">
                  <foreach collection="types" item="type" separator=" or ">
                    <if test='type == "i"'>
                      memberID like concat('%', #{keyword}, '%')
                    </if>
                  </foreach>
                </trim>
              </if>

      limit #{countEnd}
      ) member
    </select>
  <!-- 회원 리스트 검색 END -->

  <!-- 회원 탈퇴 -->
  <update id ="withdrawMember">
    update tbl_member 
    set withDrawalStatus = true, withDrawalDate = current_timestamp()
    where memberID = #{memberID}
  </update>

  <!-- 회원 수정 -->
  <update id ="modifyMember">
    update tbl_member
    set memberPW = #{memberPW}, memberAddr = #{memberAddr}, memberPhoneNum = #{memberPhoneNum}
    where memberID = #{memberID}
  </update>

</mapper>